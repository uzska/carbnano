#!/bin/tcsh
#
# example_parallel_mpi.bsub
#
# This example batch script is intended for running pure MPI
# parallel programs only (not hybrid MPI/OpenMP or hybrid
# MPI/pthreads).
#
# PLEASE DON'T REMOVE THESE COMMENTS EVER!!!
# They will always be important and may save you lots of grief.
#
# Also, please note that lines that begin with pound-BSUB (#) are
# batch scheduler directives, so they are absolutely crucial.
# DON'T REMOVE THE pound sign (#) from before the BSUB!!!!
#
# Everywhere throughout this batch script file:
# * CHANGE yourusername to your username;
# * CHANGE youremailaddress@yourinstitution.edu to your e-mail address;
# * CHANGE directory_to_run_in to the directory you want to run in;
# * CHANGE jobname to your preferred name for this batch job.
#
# NOTE: If you create any file of human-readable text on a Windows PC,
# you *MUST* perform the following command on it:
#
#   dos2unix filename
#
# where you replace "filename" with the name of the file; for example:
#
#   dos2unix /home/yourusername/input_directory/input_filename.txt
#
# This is because virtually all text editors in Windows embed hidden
# special characters in text files (for example, font information),
# and these hidden special characters cause Unix/Linux programs to
# choke.
#
# To submit a batch job:
#
#   bsub < jobname.bsub
#
# To see what batch jobs you personally have in the queue:
#
#   bjobs
#
# To see what batch jobs everyone has in the queue:
#
#   bjobs -uall
#
# To see the output so far of a currently running batch job:
#
#   bpeek JOBID
#
# but replacing JOBID with the batch job identifier, which is
# the number at the far left of that batch job's listing when
# you execute the bjobs command.
#
# To kill a batch job:
#
#   bkill JOBID
#
# but again replacing JOBID with the batch job identifer. (Note that
# you can only apply bkill to your own batch jobs, not to the batch
# jobs of other users.)
#
# Below is the output of bjobs -uall.  Note that PEND means that the
# batch job is pending (sitting in the queue waiting its turn to run)
# and RUN means running (surprise!).
#
# JOBID   USER    STAT  QUEUE    FROM_HOST EXEC_HOST JOB_NAME   SUBMIT_TIME
# 1873    andubey PEND  normal   boomer1             *ppn1_016n Apr 22 19:14
# 1976    kwthoma PEND  normal   boomer1             spstorm    Apr 24 17:36
# 1977    bcg     PEND  normal   boomer2             *ib-test32 Apr 25 14:05
# 1986    bcg     PEND  normal   boomer2             *ib-test32 Apr 25 14:05
# 2087    aauroux PEND  normal   boomer1             nbody_mpi  Apr 26 17:26
# 2088    aauroux PEND  normal   boomer1             nbody_mpi  Apr 26 17:26
# 2147    llee    PEND  normal   boomer1             *flow.bsub Apr 27 20:57
# 2148    llee    PEND  normal   boomer1             *flow.bsub Apr 27 20:58
# 2149    llee    PEND  normal   boomer1             *flow.bsub Apr 27 20:58
# 2150    llee    PEND  normal   boomer1             *flow.bsub Apr 27 20:58
# 2146    llee    PEND  normal   boomer1             lammps     Apr 27 20:53
#
# The BSUB directive below says the name of the queue to be used.
# In most cases, you should use the queue named normal.
#
#BSUB -q normal
#
# The BSUB directive below says to use MPI over a particular
# interconnection network.
#
# Possible options are:
#   -a mpich2
#     Use MPI over Gigabit Ethernet (slow interconnection network).
#     Use this when MPI_HARDWARE is set to gige.
#   -a mvapich
#     Use MPI over MVAPICH, a particular implementation of the MPI
#       libraries that runs over the high performance Infiniband
#       interconnection network).
#     Use this when MPI_HARDWARE is set to ib and MPI_SOFTWARE isn't set.
#   -a openmpi
#     Use MPI over OpenMPI, another implementation of the MPI
#       libraries that runs over the high performance Infiniband
#       interconnection network).
#     Use this when MPI_HARDWARE is set to ib and MPI_SOFTWARE is
#       set to openmpi.
#
# NOTE: The values for MPI_COMPILER, MPI_HARDWARE and MPI_SOFTWARE
#   (if used) *MUST EXACTLY MATCH* those used when the executable
#   was compiled.
#
#BSUB -a openmpi
#
# The BSUB directive below says to request exclusive access on the
# participating compute nodes, so that other batch jobs (for example,
# those submitted by other users) don't run on the same compute nodes
# as this batch job, and therefore don't interfere with it.
#
#BSUB -x
#
# Use 32 MPI processes at 16 MPI processes per node, which is to
# say 2 nodes.
#
# Please use the following pattern:
# -- For n <= 16, please use ptile equal to n unless you have a
#    very good reason to do otherwise.
# -- For n >= 16, please use ptile of 16 unless you have a very
#    good reason to do otherwise.
# This is because each compute node has 2 chips and each chip
# has 8 cores, for a total of 16 cores per node. We recommend
# using the same number of MPI processes per node as cores,
# unless you've benchmarked your code's performance and found
# that you take fewer node hours by using fewer than 16 per node.
#
# NOTE: You are encouraged to change these to numbers that are
# appropriate for you.
#
#BSUB -n 16
#BSUB -R "span[ptile=16]"
#
# STDOUT is the output that normally would go to the terminal screen.
# STDERR is like STDOUT, except that it contains error messages instead
# of regular output.
#
# The BSUB directive below says, send STDOUT and STDERR to the filenames
# listed below.
#
# Note that, in these filenames, %J will be replaced by the batch job ID
# number (for example, 2146 as above).
#
# Everywhere throughout this batch script file:
# * CHANGE yourusername to your username;
# * CHANGE youremailaddress@yourinstitution.edu to your e-mail address;
# * CHANGE directory_to_run_in to the directory you want to run in;
# * CHANGE jobname to your preferred name for this batch job.
#
#BSUB -o /home/joe/reu/carbnano/output/free_%J_stdout.txt
#BSUB -e /home/joe/reu/carbnano/output/free_%J_stderr.txt
#
# The BSUB directive below says to run for up to 12 hours (and zero
# minutes) of "wall clock" time (time experienced in real life).
# Currently, the maximum allowable wall clock time per batch job is
# 48:00 hours.
#
#BSUB -W 12:00
#
# The BSUB directive below says the name of the batch job, as it
# will appear in the batch queue when you do a bjobs command.
#
# Everywhere throughout this batch script file:
# * CHANGE yourusername to your username;
# * CHANGE youremailaddress@yourinstitution.edu to your e-mail address;
# * CHANGE directory_to_run_in to the directory you want to run in;
# * CHANGE jobname to your preferred name for this batch job.
#
#BSUB -J "free"
#
# The BSUB directive below says the e-mail address to send
# notifications to, which should be changed to your e-mail address.
#
#BSUB -u joej@reed.edu
#
# If you only want e-mails when when a batch job fails, then delete
# the BSUB directive below.
#
#BSUB -N

# Change to the directory that you want to run in.
#
# Everywhere throughout this batch script file:
# * CHANGE yourusername to your username;
# * CHANGE youremailaddress@yourinstitution.edu to your e-mail address;
# * CHANGE directory_to_run_in to the directory you want to run in;
# * CHANGE jobname to your preferred name for this batch job.

cd /home/joe/reu/carbnano

# Make sure that you're in the correct directory.

pwd

# Set the environment variable for the compiler family that you
# used to compile your executable. This *MUST EXACTLY MATCH* what
# you used when you compiled your executable.
#
# For possible value of MPI_COMPILER, see:
#   http://www.oscer.ou.edu/boomer_quick_and_dirty.php
#

setenv MPI_COMPILER gnu # intel OR gnu OR pgi OR nag

# Set the environment variable for the interconnection network that
# you used to compile your executable. This *MUST EXACTLY MATCH*
# what you used when you compiled your executable.
#
# For possible value of MPI_HARDWARE, see:
#   http://www.oscer.ou.edu/boomer_quick_and_dirty.php
#

setenv MPI_HARDWARE ib # ib (Infiniband) OR gige (Gigabit Ethernet)

# Set the environment variable for the specific subset of the
# interconnection network that you used to compile your
# executable. This *MUST EXACTLY MATCH* what you used when you
# compiled your executable.
#
# NOTE: Currently, you only need to set MPI_SOFTWARE if you are
# using OpenMPI over Infiniband, which is why it's commented out
# by default.
#
# For possible value of MPI_SOFTWARE, see:
#   http://www.oscer.ou.edu/boomer_quick_and_dirty.php
#

#setenv MPI_SOFTWARE openmpi # Only commment this if you compiled with it off.

# Run the executable, redirecting input from the given file.
# The date commands and the time command help track runtime
# and performance.
#
# NOTE: The line immediately before the second date command,
# which runs the executable, "redirects" standard input
# (typically a user typing at the keyboard) from a file of
# human readable text.
#
# If your program uses no input, or if for all input your program
# explicitly opens its files inside the program (for example, via
# an OPEN statement in Fortran or an fopen command in C), then you
# don't need that line, nor do you need the backslash \ at the end
# of the previous line, so DELETE THEM.
#
# Everywhere throughout this batch script file:
# * CHANGE yourusername to your username;
# * CHANGE youremailaddress@yourinstitution.edu to your e-mail address;
# * CHANGE directory_to_run_in to the directory you want to run in;
# * CHANGE jobname to your preferred name for this batch job.
#
# Here, also CHANGE executable_directory to the directory where your
# executable resides, CHANGE executable_filename to the name of the
# executable file, CHANGE input_directory to the directory where your
# standard input file resides, and CHANGE input_filename.txt to the
# name of your standard input file (that is, the file that you want
# to use for standard input, instead of a user typing live at the
# keyboard, which isn't possible for a batch job).
#
# NOTE!!! YOU ***MUST*** USE THE ABSOLUTE FULL PATH FOR YOUR EXECUTABLE!
#   ***DON'T*** USE A RELATIVE PATH OR LEAVE OUT THE PATH!!!

date
mpirun.lsf \
  /home/joe/reu/carbnano/main
date

